name: Deploy to Aether

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Vulkan image
      uses: docker/build-push-action@v5
      with:
        context: ./services/vulkan
        file: ./services/vulkan/Dockerfile.prod
        push: true
        platforms: linux/arm64
        tags: ghcr.io/kungfusaini/vulkan:latest

    - name: Build and push sumeetsaini_com image
      uses: docker/build-push-action@v5
      with:
        context: ./services/sumeetsaini_com
        file: ./services/sumeetsaini_com/Dockerfile.prod
        push: true
        platforms: linux/arm64
        tags: ghcr.io/kungfusaini/sumeetsaini_com:latest

    - name: Sync compose files to AETHER
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.AETHER_HOST }}
        username: ${{ secrets.AETHER_USER }}
        key: ${{ secrets.AETHER_SSH_KEY }}
        source: "docker-compose*.yml,services/,scripts/"
        target: ${{ secrets.AETHER_PATH }}
        strip_components: 0
        overwrite: true

    - name: Deploy to AETHER
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AETHER_HOST }}
        username: ${{ secrets.AETHER_USER }}
        key: ${{ secrets.AETHER_SSH_KEY }}
        script: |
          cd ${{ secrets.AETHER_PATH }}
          
          # Create network if it doesn't exist
          docker network create aether-network 2>/dev/null || true
          
          # Pull and deploy main services
          docker compose -f docker-compose.yml -f docker-compose.prod.yml pull
          docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
          
          # Wait for services to be ready
          sleep 10
          
          # Deploy mailcow integration (production only)
          if [ -f docker-compose.mailcow.yml ]; then
            docker compose -f docker-compose.yml -f docker-compose.prod.yml -f docker-compose.mailcow.yml up -d
          fi
          
          # Clean up old images
          docker image prune -f

    - name: Health check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AETHER_HOST }}
        username: ${{ secrets.AETHER_USER }}
        key: ${{ secrets.AETHER_SSH_KEY }}
        script: |
          cd ${{ secrets.AETHER_PATH }}
          
          # Wait for services to fully start
          sleep 30
          
          # Check service health
          echo "=== Service Status ==="
          docker compose -f docker-compose.yml -f docker-compose.prod.yml ps
          
          echo "=== Health Checks ==="
          curl -f -s -o /dev/null -w "Frontend: %{http_code}\n" https://sumeetsaini.com || echo "Frontend check failed"
          curl -f -s -o /dev/null -w "API: %{http_code}\n" https://vulkan.sumeetsaini.com/status || echo "API check failed"
          curl -f -s -o /dev/null -w "Mail: %{http_code}\n" https://mail.sumeetsaini.com || echo "Mail check failed"

